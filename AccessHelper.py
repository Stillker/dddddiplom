import pyodbc

connection_string = r'Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C:\Users\User\PycharmProjects\diplom\Main_BD.accdb;'
connection = pyodbc.connect(connection_string)
print("Connected")


def get_rating():
    rating = []
    try:
        cursor = connection.cursor()
        cursor.execute('SELECT `—Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª` FROM –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—ã WHERE `–∫–æ–ø–∏—è –î–æ–æ` = False')
        for row in cursor.fetchall():
            rating.append("%s" % round(row[0], 2))

        rating.sort(reverse=True)
        return rating

    except pyodbc.Error as error:
        print("Error", error)


def get_stat(rating, regNumber):
    try:
        if is_user_exist(regNumber):
            cursor = connection.cursor()
            cursor.execute('SELECT `—Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª` FROM –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—ã WHERE `—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä` = ?', regNumber)
            for row in cursor.fetchall():
                student_rating = "%s" % round(row[0], 2)
                if student_rating in rating:
                    return f'üìà –í–∞—à –±–∞–ª–ª –∞—Ç—Ç–µ—Å—Ç–∞—Ç–∞: {student_rating}.\nüèÜ –í–∞—à–µ –º–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ: {rating.index(student_rating) + 1}'

                else:
                    return "–í–∞—Å –Ω–µ—Ç –≤ –ë–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –í–æ–∑–º–æ–∂–Ω–æ, –í—ã –ø—Ä–∏–Ω–µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ –∫–æ–ø–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞."
        else:
            return "‚ùå –ù–µ—Ç —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è! ‚ùå\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –ª–∏–±–æ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ –∫–æ–ø–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!"

    except pyodbc.Error as error:
        print("Error", error)


def is_user_exist(regNumber):
    try:
        users = []
        cursor = connection.cursor()
        cursor.execute('SELECT `—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä` FROM –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç—ã WHERE `–∫–æ–ø–∏—è –î–æ–æ` = False')
        user_find = cursor.fetchall()
        for row in user_find:
            users.append("%s" % row[0])

        if regNumber in users:
            return True

        else:
            return False

    except pyodbc.Error as error:
        print("Error", error)
